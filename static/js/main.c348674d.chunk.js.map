{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","tab","onTabSelected","selectedTabData","find","t","id","className","map","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","tabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAA4B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,cAC/CC,EAAkBH,EAAKI,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOL,KAElD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWF,EAAEC,KAAOL,EAAM,YAAc,GACxC,UAAQ,MAHV,SAKE,mBACEQ,KAAI,WAAMJ,EAAEC,IACZ,UAAQ,UACRI,QAAS,kBAAMR,EAAcG,EAAEC,KAHjC,SAKGD,EAAEM,SATAN,EAAEC,WAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAiBS,cC1BbZ,EAAc,CACzB,CAAEM,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAS,SAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAQMb,EAAkBH,EAAKI,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOS,KAElD,OACE,sBAAKR,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,OAGGJ,QAHH,IAGGA,OAHH,EAGGA,EAAiBQ,SAGpB,cAAC,EAAD,CACEX,KAAMA,EACNC,IAAKc,EACLb,cAnBoB,SAACe,GACrBA,IAAUF,GACZC,EAAeC,UCrBrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c348674d.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface TabsProps {\n  tabs: Tab[];\n  tab: string;\n  onTabSelected: (tabId: string) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({ tabs, tab, onTabSelected }) => {\n  const selectedTabData = tabs.find((t) => t.id === tab);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((t) => (\n            <li\n              key={t.id}\n              className={t.id === tab ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${t.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onTabSelected(t.id)}\n              >\n                {t.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabData?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState('tab-1');\n\n  const handleTabSelected = (tabId: string) => {\n    if (tabId !== selectedTab) {\n      setSelectedTab(tabId);\n    }\n  };\n\n  const selectedTabData = tabs.find((t) => t.id === selectedTab);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTabData?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        tab={selectedTab}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}